(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{511:function(v,_,t){"use strict";t.r(_);var s=t(2),a=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("聊聊RabbitMQ常见面试题")]),v._v(" "),_("h2",{attrs:{id:"一-如何保证不重复消费-如何保证幂等性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一-如何保证不重复消费-如何保证幂等性"}},[v._v("#")]),v._v(" 一.如何保证不重复消费(如何保证幂等性)?")]),v._v(" "),_("p",[_("strong",[v._v("幂等")]),v._v("是一个数学概念,即f(x) = f(f(x))")]),v._v(" "),_("p",[v._v("在程序开发中,指"),_("u",[v._v("同一个业务执行一次或者多次对业务状态的影响一致")])]),v._v(" "),_("ul",[_("li",[v._v("幂等业务 : 查询业务,如根据id查询商品,多次执行效果一致")]),v._v(" "),_("li",[v._v("非幂等业务 :  用户下单业务,扣减库存,多次执行效果不一致")])]),v._v(" "),_("p",[_("big",[_("strong",[v._v("唯一ID")])])],1),v._v(" "),_("p",[v._v("给每个消息设置"),_("strong",[v._v("唯一ID")])]),v._v(" "),_("ol",[_("li",[v._v("每一条消息都生成一个唯一的id，与消息一起投递给消费者")]),v._v(" "),_("li",[v._v("消费者接收到消息后处理自己的业务，业务处理成功后将消息ID保存到数据库")]),v._v(" "),_("li",[v._v("如果下次又收到相同消息，去数据库查询判断是否存在，存在则为重复消息放弃处理")])]),v._v(" "),_("p",[v._v("缺点 :")]),v._v(" "),_("p",[v._v("消费方需要存唯一id等相应处理")]),v._v(" "),_("h2",{attrs:{id:"二-处理消息失败了怎么办"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-处理消息失败了怎么办"}},[v._v("#")]),v._v(" 二.处理消息失败了怎么办?")]),v._v(" "),_("p",[v._v("一般来说使用死信队列")]),v._v(" "),_("p",[v._v("一般生产环境中，都会在使用MQ的时候设计两个队列：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("核心业务队列")]),v._v(" : 专门处理系统业务的")]),v._v(" "),_("li",[_("strong",[v._v("死信队列")]),v._v(" : 绑定死信交换机的队列,处理异常情况")])]),v._v(" "),_("p",[_("big",[_("strong",[v._v("什么是死信?")])])],1),v._v(" "),_("p",[v._v("当一个队列中的消息满足下列情况之一时，就会成为"),_("strong",[v._v("死信（dead letter)")]),v._v(" :")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("消费者使用basic.reject或 basic.nack声明消费失败，并且消息的requeue参数设置为false")]),v._v(" "),_("p",[v._v("(简单来说就是消费者不要这个消息了)")])]),v._v(" "),_("li",[_("p",[v._v("消息是一个过期消息（达到了队列或消息本身设置的过期时间），超时无人消费")])]),v._v(" "),_("li",[_("p",[v._v("要投递的队列消息堆积满了，最早的消息可能成为死信")])])]),v._v(" "),_("p",[_("big",[_("strong",[v._v("死信队列")])])],1),v._v(" "),_("p",[v._v("死信消息会被RabbitMQ进行特殊处理")]),v._v(" "),_("p",[v._v("如果配置了死信队列信息，那么该消息将会被丢进"),_("strong",[v._v("死信队列")]),v._v("中")]),v._v(" "),_("p",[v._v("如果没有配置，则该消息将会被丢弃")]),v._v(" "),_("p",[v._v("死信队列的配置方式如下 :")]),v._v(" "),_("ol",[_("li",[v._v("配置业务队列，绑定到业务交换机上")]),v._v(" "),_("li",[v._v("为业务队列配置死信交换机和路由key")]),v._v(" "),_("li",[v._v("为死信交换机配置死信队列")])]),v._v(" "),_("p",[v._v("所以MQ消息处理失败之后就"),_("strong",[v._v("死信队列")])]),v._v(" "),_("p",[v._v("之后通过人工运维处理死信队列")]),v._v(" "),_("p",[v._v("或等待系统正常后把死信队列中的消息路由到Queue去处理")]),v._v(" "),_("h2",{attrs:{id:"三-如何保证消费顺序性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三-如何保证消费顺序性"}},[v._v("#")]),v._v(" 三.如何保证消费顺序性?")]),v._v(" "),_("p",[v._v("消息队列中的若干消息如果是对同一个数据进行操作")]),v._v(" "),_("p",[v._v("这些操作具有前后的关系,必须按前后的顺序执行,否则就会造成数据异常")]),v._v(" "),_("p",[v._v("队列本身是有序的,但是消费者端不一定了")]),v._v(" "),_("blockquote",[_("p",[v._v("但是如果RabbitMQ的消息消费顺序出错怎么办呢?")])]),v._v(" "),_("p",[v._v("如: "),_("strong",[_("u",[v._v("一个MQ中的数据有多个消费者消费,每个消费者执行的时间并不固定")])])]),v._v(" "),_("p",[v._v("先说结论 :")]),v._v(" "),_("p",[v._v("有多个消费者的情况下，通常是无法保证消息顺序的")]),v._v(" "),_("p",[v._v("为了解决这个问题,一般的做法是每个MQ只绑定一个消费者,或一个MQ只使用一个MQ监听")]),v._v(" "),_("h2",{attrs:{id:"四-如何解决消息积压"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四-如何解决消息积压"}},[v._v("#")]),v._v(" 四.如何解决消息积压?")]),v._v(" "),_("p",[v._v("所谓消息积压一般是由于"),_("strong",[v._v("消费端消费的速度远小于生产者发消息的速度")])]),v._v(" "),_("p",[v._v("导致大量消息在 RabbitMQ 的队列中无法消费")]),v._v(" "),_("p",[v._v("我们可以控制生产端接口适当限流.....")]),v._v(" "),_("p",[v._v("不行,会影响用户体验")]),v._v(" "),_("p",[v._v("所以我们只能增加消费端的速度")]),v._v(" "),_("ol",[_("li",[v._v("增加消费者的处理能力,如增加消费端实例")]),v._v(" "),_("li",[v._v('在MQ的配置中配置"'),_("strong",[v._v("最大消费者数量")]),v._v('"与"'),_("strong",[v._v("每次从队列中获取的消息数量")]),v._v('"')]),v._v(" "),_("li",[v._v("给消息设置定时，超时就丢弃")])]),v._v(" "),_("h2",{attrs:{id:"五-如何保证消息不丢失"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五-如何保证消息不丢失"}},[v._v("#")]),v._v(" 五.如何保证消息不丢失?")]),v._v(" "),_("p",[v._v("这个问题从可靠性方面回答")]),v._v(" "),_("p",[v._v("直接看我另一篇文章"),_("a",{attrs:{href:"./MQ%E5%8F%AF%E9%9D%A0%E6%80%A7%E8%AF%A6%E8%A7%A3"}},[v._v("RabbitMQ可靠性")])])])}),[],!1,null,null,null);_.default=a.exports}}]);