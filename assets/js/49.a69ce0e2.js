(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{473:function(t,e,_){"use strict";_.r(e);var v=_(2),r=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一-innodb页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-innodb页"}},[t._v("#")]),t._v(" 一.InnoDB页")]),t._v(" "),e("p",[t._v("InnoDB是一个将表中的数据存储到磁盘上的存储引擎")]),t._v(" "),e("p",[t._v("所以关机后存储数据依然存在.")]),t._v(" "),e("p",[t._v("处理数据时 :")]),t._v(" "),e("ul",[e("li",[t._v("读请求 : 将磁盘内容读到内存")]),t._v(" "),e("li",[t._v("写请求 : 将内存中的被修改后的数据写回磁盘")])]),t._v(" "),e("p",[t._v("但是对于磁盘的读写操作非常慢,与内存操作相差了几个数量级.")]),t._v(" "),e("p",[t._v("所以我们想要从表中获取数据时,"),e("strong",[t._v("InnoDB将数据划分为若干页,以页为磁盘和内存之间交互的基本单位,InnoDB中页的大小一般为16k")])]),t._v(" "),e("p",[t._v("在这种情况下,即使你select一条数据,但是数据所在页都会从磁盘加载到内存")]),t._v(" "),e("p",[t._v("InnoDB分为数据页和索引页")]),t._v(" "),e("p",[t._v("数据页用来存放数据")]),t._v(" "),e("p",[t._v("索引页用来存放索引")]),t._v(" "),e("p",[t._v("InnoDB的索引和数据存放在一起,这是和MYISAM不同的地方之一")]),t._v(" "),e("h2",{attrs:{id:"二-innodb页结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-innodb页结构"}},[t._v("#")]),t._v(" 二.InnoDB页结构")]),t._v(" "),e("p",[t._v("16k的页被划分成以下几个部分")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("名称")]),t._v(" "),e("th",[t._v("中文名")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("作用")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("大小")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("File Header")]),t._v(" "),e("td",[t._v("文件头部")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("页的一些通用信息")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("38B")])]),t._v(" "),e("tr",[e("td",[t._v("Page Header")]),t._v(" "),e("td",[t._v("页面头部")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("数据页专用的一些信息")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("56B")])]),t._v(" "),e("tr",[e("td",[t._v("Infimum + Supermum")]),t._v(" "),e("td",[t._v("最小记录和最大记录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("两个虚拟的行记录,存放最大记录和最小记录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("26B")])]),t._v(" "),e("tr",[e("td",[t._v("User Records")]),t._v(" "),e("td",[t._v("用户记录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("实际存储的行数据内容")]),t._v("，初始为空，随着记录的增加，从Free Space中挪用空间")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")])]),t._v(" "),e("tr",[e("td",[t._v("Free Space")]),t._v(" "),e("td",[t._v("空闲空间")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("页中未使用的空间，为User Records提供空间")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")])]),t._v(" "),e("tr",[e("td",[t._v("Page Directory")]),t._v(" "),e("td",[t._v("页面目录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("页中的某些记录的相对位置")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不确定")])]),t._v(" "),e("tr",[e("td",[t._v("File Trailer")]),t._v(" "),e("td",[t._v("文件尾部")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("校验页是否完整")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("8B")])])])]),t._v(" "),e("h3",{attrs:{id:"_1-user-records-真实数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-user-records-真实数据"}},[t._v("#")]),t._v(" 1.User Records (真实数据)")]),t._v(" "),e("p",[t._v("在页的7个组成部分中，我们自己的数据（student、user）会存储在User Records中。")]),t._v(" "),e("p",[t._v("但是在一开始生成页的时候不会为User Redords分配空间，每当我们插入一条数据，都会从Free Space分出部分空间到User Redords来存储这条数据")]),t._v(" "),e("p",[t._v("直到Free Space被User Records全部替代，说明这个页用光了，就会创建新的页。")]),t._v(" "),e("h3",{attrs:{id:"_2-page-director-页目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-page-director-页目录"}},[t._v("#")]),t._v(" 2. Page Director(页目录)")]),t._v(" "),e("p",[t._v("记录之间类似链表,但是效率较慢.")]),t._v(" "),e("p",[t._v("MySQL的索引使用的是B+树，这里我们讲的是数据页，不是索引页，所以没有用到B+树，但是MySQL的设计者还是采用了一定的方式加快数据的查询。")]),t._v(" "),e("p",[t._v("MySQL采用了以下方式：")]),t._v(" "),e("ol",[e("li",[t._v("将所有未删除的数据划分为不同的组(包括最大记录和最小记录)")]),t._v(" "),e("li",[t._v("每个组的最后一条记录的记录头信息中的 "),e("strong",[t._v("n_owned")]),t._v(" 属性表示该组内有多少条记录")]),t._v(" "),e("li",[t._v("将每个组的"),e("strong",[t._v("最后一条记录的地址偏移量")]),t._v("单独提取出来按照顺序存储到 Page Directory 中（也就是页目录），我们将这些地址偏移量称为 "),e("strong",[t._v("槽(Slot)")])])]),t._v(" "),e("p",[t._v("所以页目录由槽组成")]),t._v(" "),e("h3",{attrs:{id:"_3-page-header-页头部信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-page-header-页头部信息"}},[t._v("#")]),t._v(" 3. Page Header(页头部信息)")]),t._v(" "),e("p",[t._v("MySQL为了能得到一个数据页中存储记录的状态信息")]),t._v(" "),e("p",[t._v("专门开辟了一个叫Page Header的部分")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("名称")]),t._v(" "),e("th",[t._v("作用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Page_N_Dir_Slots")]),t._v(" "),e("td",[t._v("该页的页目录中的槽的数量")])]),t._v(" "),e("tr",[e("td",[t._v("Page_N_Heap")]),t._v(" "),e("td",[t._v("本页中的记录的数量（删除&未删除）")])]),t._v(" "),e("tr",[e("td",[t._v("Page_Level")]),t._v(" "),e("td",[t._v("当前页在B+树所处的层级")])]),t._v(" "),e("tr",[e("td",[t._v("Page_Index_id")]),t._v(" "),e("td",[t._v("本页属于哪个索引")])])])]),t._v(" "),e("h3",{attrs:{id:"_4-file-header-文件头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-file-header-文件头"}},[t._v("#")]),t._v(" 4. File Header（文件头）")]),t._v(" "),e("p",[e("strong",[t._v("File Header是每种页都有的属性")]),t._v("，其中重要的字段如：本页编号、上一页编号、下一页编号、校验和。")]),t._v(" "),e("p",[t._v("上一个与下一个页的编号：可以将所有数据页组成一个双链表，遍历就很方便了。")]),t._v(" "),e("p",[e("strong",[e("u",[t._v("下一个数据页中用户记录的主键值必须大于上一个页中用户记录的主键值")])])]),t._v(" "),e("h3",{attrs:{id:"_5-file-trailer-文件尾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-file-trailer-文件尾"}},[t._v("#")]),t._v(" 5.File Trailer（文件尾）")]),t._v(" "),e("p",[t._v("判断页是否完整")])])}),[],!1,null,null,null);e.default=r.exports}}]);