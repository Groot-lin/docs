(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{498:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-spring事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-spring事务"}},[t._v("#")]),t._v(" 一.Spring事务")]),t._v(" "),a("p",[t._v("Spring在各个技术基础上,提供了同一的控制事务的接口")]),t._v(" "),a("p",[t._v("分为")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("事务控制方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("编程式事务控制")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Spring提供了事务控制的类和方法,使用编码的方式对业务代码进行事务控制,事务控制代码和业务操作代码耦合在一起,故开发中不常使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("声明式事务控制")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Spring将事务控制的代码封装,对外提供了Xml和注解配置方式,通过配置方式完成事务的控制,可以达到事务控制与业务操作代码解耦合,开发中推荐使用")])])])]),t._v(" "),a("h2",{attrs:{id:"二-编程式事务控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-编程式事务控制"}},[t._v("#")]),t._v(" 二.编程式事务控制")]),t._v(" "),a("p",[t._v("我们简单介绍一下即可")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("事务控制相关类")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("平台事务管理器PlatformTransactionManager")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是一个接口标准，实现类都具备事务提交、回滚和获得事务对象的功能，不同持久层框架可能会有不同实现方案")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("事务定义TransactionDefinition")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("封装事务的隔离级别、传播行为、过期时间等属性信息")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("事务状态TransactionStatus")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("存储当前事务的状态信息，如果事务是否提交、是否回滚、是否有回滚点等")])])])]),t._v(" "),a("p",[a("big",[a("strong",[t._v("PlatformTransactionManager")])])],1),t._v(" "),a("p",[t._v("平台事务管理器接口")]),t._v(" "),a("p",[t._v("通过这个接口,Spring为各个平台")]),t._v(" "),a("p",[t._v("如JDBC,Hibernate,JPA等持久化技术都提供了对应的事务管理器")]),t._v(" "),a("p",[t._v("由各个平台具体实现")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PlatformTransactionManager")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得事务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionStatus")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTransaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Nullable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionDefinition")]),t._v(" var1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//提交事务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionStatus")]),t._v(" var1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//回滚事务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionStatus")]),t._v(" var1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"三-aop与代理模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-aop与代理模式"}},[t._v("#")]),t._v(" 三.AOP与代理模式")]),t._v(" "),a("p",[a("strong",[t._v("Spring事务")]),t._v("管理利用"),a("strong",[t._v("AOP")]),t._v("和"),a("strong",[t._v("代理模式")]),t._v("，为目标对象创建代理对象，以实现事务的开启、提交、回滚等")]),t._v(" "),a("h3",{attrs:{id:"_1-动态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-动态代理"}},[t._v("#")]),t._v(" 1.动态代理")]),t._v(" "),a("p",[t._v("如果目标对象实现了接口,Spring会用JDK的动态代理来创建代理对象")]),t._v(" "),a("p",[t._v("如:")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2-cglib代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cglib代理"}},[t._v("#")]),t._v(" 2.CGLIB代理")]),t._v(" "),a("p",[t._v("如果对象没有实现接口,Spring会用CGLIB来创建建代理对象")]),t._v(" "),a("p",[t._v("如 :")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),t._v(" enhancer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Enhancer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nenhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSuperclass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nenhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodInterceptorImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" enhancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"四-spring事务的属性配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-spring事务的属性配置"}},[t._v("#")]),t._v(" 四.Spring事务的属性配置")]),t._v(" "),a("h3",{attrs:{id:"_1-隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-隔离级别"}},[t._v("#")]),t._v(" 1.隔离级别")]),t._v(" "),a("p",[t._v("Spring提供了与大多数数据库一致的隔离级别")]),t._v(" "),a("p",[t._v("其思想与数据库的隔离级别类似,是一种性能和安全的相互妥协")]),t._v(" "),a("ul",[a("li",[t._v("DEFAULT：使用数据库默认的隔离级别")]),t._v(" "),a("li",[t._v("READ_UNCOMMITTED：允许读取未提交的数据")]),t._v(" "),a("li",[t._v("READ_COMMITTED：只允许读取已提交的数据")]),t._v(" "),a("li",[t._v("REPEATABLE_READ：确保多次读取的结果是一致的")]),t._v(" "),a("li",[t._v("SERIALIZABLE：提供严格的事务隔离，以避免幻读")])]),t._v(" "),a("h3",{attrs:{id:"_2-传播行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-传播行为"}},[t._v("#")]),t._v(" 2.传播行为")]),t._v(" "),a("p",[t._v("事务传播行为用来描述由某一个事务传播行为修饰的方法被嵌套进另一个方法的时事务如何传播")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("PROPAGATION_REQUIRED")])]),t._v(" "),a("td",[t._v("Spring的默认传播级别，如果上下文中存在事务则加入当前事务，如果不存在事务则新建事务执行")])]),t._v(" "),a("tr",[a("td",[t._v("PROPAGATION_SUPPORTS")]),t._v(" "),a("td",[t._v("如果上下文中存在事务则加入当前事务，如果没有事务则以非事务方式执行")])]),t._v(" "),a("tr",[a("td",[t._v("PROPAGATION_MANDATORY")]),t._v(" "),a("td",[t._v("该传播级别要求上下文中必须存在事务，否则抛出异常")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("PROPAGATION_REQUIRES_NEW")])]),t._v(" "),a("td",[t._v("每次执行都会创建新事务，并同时将上下文中的事务挂起，执行完当前线程后再恢复上下文中事务")])]),t._v(" "),a("tr",[a("td",[t._v("PROPAGATION_NOT_SUPPORTED")]),t._v(" "),a("td",[t._v("当上下文中有事务则挂起当前事务，执行完当前逻辑后再恢复上下文事务")])]),t._v(" "),a("tr",[a("td",[t._v("PROPAGATION_NEVER")]),t._v(" "),a("td",[t._v("该传播级别要求上下文中不能存在事务，否则抛出异常")])]),t._v(" "),a("tr",[a("td",[t._v("PROPAGATION_NESTED")]),t._v(" "),a("td",[t._v("嵌套事务，如果上下文中存在事务则嵌套执行，如果不存在则新建事务")])])])]),t._v(" "),a("p",[t._v("详细介绍两个")]),t._v(" "),a("p",[a("big",[a("strong",[t._v("PROPAGATION_REQUIRED")])])],1),t._v(" "),a("p",[t._v("在A事务中且需要执行B事务")]),t._v(" "),a("p",[t._v("那么B事务则直接加入当前A事务执行")]),t._v(" "),a("p",[t._v("流程如下 :")]),t._v(" "),a("p",[t._v("begin A")]),t._v(" "),a("p",[t._v("begin B")]),t._v(" "),a("p",[t._v("commitB")]),t._v(" "),a("p",[t._v("commitA")]),t._v(" "),a("ul",[a("li",[t._v("A事务失败,回滚")]),t._v(" "),a("li",[t._v("B事务失败,连同A回滚")])]),t._v(" "),a("p",[a("big",[a("strong",[t._v("PROPAGATION_REQUIRES_NEW")])])],1),t._v(" "),a("p",[t._v("我称之为插队事务")]),t._v(" "),a("p",[t._v("当A事务正在执行")]),t._v(" "),a("p",[t._v("需要执行B事务")]),t._v(" "),a("p",[t._v("则暂停A事务")]),t._v(" "),a("p",[t._v("直到B事务提交")]),t._v(" "),a("ul",[a("li",[t._v("B无论执行成功与否,A事务都会恢复")]),t._v(" "),a("li",[t._v("B事务对于A事务是单独的")])]),t._v(" "),a("h3",{attrs:{id:"_3-只读标志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-只读标志"}},[t._v("#")]),t._v(" 3.只读标志")]),t._v(" "),a("p",[t._v("只读事务")]),t._v(" "),a("p",[t._v("在所需执行的方法上添加标签")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readOnly "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在将事务设置成只读后，当前只读事务就不能进行写的操作，否则报错")]),t._v(" "),a("p",[t._v("只读事务可以提高事务的并发性能，因为在只读事务中，数据库不需要进行锁定，从而提高了并发度")]),t._v(" "),a("h3",{attrs:{id:"_4-超时设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-超时设置"}},[t._v("#")]),t._v(" 4.超时设置")]),t._v(" "),a("p",[a("strong",[t._v("超时设置")]),t._v("定义了事务的最长运行时间，如果超出这个时间，则事务会被回滚")]),t._v(" "),a("p",[t._v("用于验证码,规定时间内支付等 ......")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);