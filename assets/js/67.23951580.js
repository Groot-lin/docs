(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{493:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("一个.java文件从源代码到运行")]),t._v(" "),s("p",[t._v(".java -> javac编译 -> .class -> 解释器 -> 机器码 -> 运行")]),t._v(" "),s("p",[t._v("其中.class文件到机器码这一步")]),t._v(" "),s("p",[t._v("由"),s("strong",[t._v("JVM类加载器")]),t._v("首先加载字节码文件")]),t._v(" "),s("h2",{attrs:{id:"一-类加载过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-类加载过程"}},[t._v("#")]),t._v(" 一.类加载过程")]),t._v(" "),s("p",[s("strong",[t._v("Class 文件需要加载到虚拟机中之后才能运行和使用")]),t._v(",系统加载 Class 类型的文件主要三步："),s("strong",[t._v("加载->连接->初始化")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("加载")])]),t._v(" "),s("li",[s("p",[t._v("链接")])])]),t._v(" "),s("p",[t._v("$$\n链接\n\\begin{cases}\n验证\\\n准备\\\n解析\\\n\\end{cases}\n$$")]),t._v(" "),s("p",[t._v("3.初始化")]),t._v(" "),s("h3",{attrs:{id:"_1-loding加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-loding加载"}},[t._v("#")]),t._v(" 1.Loding加载")]),t._v(" "),s("p",[t._v("将.class文件的二进制字节流督导内存中(JDK1.7之间属于JVM内存,JDK1.8以后为本地内存)")]),t._v(" "),s("p",[t._v("并在队中创建"),s("strong",[t._v("Class对象")]),t._v(",作为.class进入内存后的数据的访问入口.")]),t._v(" "),s("h3",{attrs:{id:"_2-验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-验证"}},[t._v("#")]),t._v(" 2.验证")]),t._v(" "),s("p",[t._v("保证Class文件的字节流中包含的信息是否符合规范,验证魔数-咖啡宝贝")]),t._v(" "),s("h3",{attrs:{id:"_3-准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备"}},[t._v("#")]),t._v(" 3.准备")]),t._v(" "),s("p",[t._v("为"),s("strong",[t._v("静态变量")]),t._v("分配内存并设置变量初始值阶段")]),t._v(" "),s("ul",[s("li",[t._v("static变量在JDK7之前存储于instanceKlass末尾,之后存储于_java_mirror末尾")]),t._v(" "),s("li",[t._v("static 变量"),s("strong",[t._v("分配空间")]),t._v("和"),s("strong",[t._v("赋值")]),t._v("是两个步骤,赋值在初始化阶段完成")]),t._v(" "),s("li",[t._v("如果static变量是final的基本类型,那么编译阶段值就确定了,赋值在"),s("strong",[t._v("准备阶段")]),t._v("完成")]),t._v(" "),s("li",[t._v("如果static变量是final的基本类型,且是引用类型,赋值在初始化阶段完成")])]),t._v(" "),s("h3",{attrs:{id:"_4-解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-解析"}},[t._v("#")]),t._v(" 4.解析")]),t._v(" "),s("p",[s("strong",[t._v("解析阶段是虚拟机将常量池内的符号引用替换为直接引用的过程。")])]),t._v(" "),s("p",[t._v("也就是得到类,方法在内存中的指针或偏移量")]),t._v(" "),s("h3",{attrs:{id:"_5-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-初始化"}},[t._v("#")]),t._v(" 5.初始化")]),t._v(" "),s("p",[t._v("初始化过程执行类构造器方法< clinit >()的过程")]),t._v(" "),s("p",[t._v("这个方法是javac编译器自动收集类中"),s("strong",[t._v("所有变量的赋值动作和静态代码块中的语句")]),t._v("合并而来")]),t._v(" "),s("p",[t._v("类初始化是懒惰的")]),t._v(" "),s("p",[t._v("会初始化的情况")]),t._v(" "),s("ul",[s("li",[t._v("main方法所在的类,总会被首先初始化")]),t._v(" "),s("li",[t._v("首次访问这个类的静态变量或静态方法")]),t._v(" "),s("li",[t._v("子类初始化,如果父类还没初始化,会引发")]),t._v(" "),s("li",[t._v("子类访问父类的静态变量,指挥触发父类的初始化")]),t._v(" "),s("li",[t._v("Class.forName")]),t._v(" "),s("li",[t._v("new 会导致初始化")])]),t._v(" "),s("p",[t._v("不会导致类初始化的情况")]),t._v(" "),s("ul",[s("li",[t._v("访问类的 staticfinal静态便常量不会触发初始化")]),t._v(" "),s("li",[t._v("类对象.class不会出发初始化")]),t._v(" "),s("li",[t._v("创建该类的数组不会触发初始化")]),t._v(" "),s("li",[t._v("类加载器的loadClass方法")]),t._v(" "),s("li",[t._v("Class.forName的参数2为false时")])]),t._v(" "),s("h2",{attrs:{id:"二-类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-类加载器"}},[t._v("#")]),t._v(" 二.类加载器")]),t._v(" "),s("p",[t._v("作用 :")]),t._v(" "),s("p",[t._v("​\t\t类加载器子系统负责从文件系统或者网络中加载class文件")]),t._v(" "),s("p",[t._v("类加载器包括两种,分别为"),s("strong",[t._v("启动类加载器")]),t._v("和"),s("strong",[t._v("自定义类加载器")])]),t._v(" "),s("p",[t._v("所有派生于抽象类"),s("strong",[t._v("ClassLoader")]),t._v("的类加载器划分为"),s("strong",[t._v("自定义类加载器")])]),t._v(" "),s("p",[t._v("JDK8")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("加载类所在文件夹")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Bootstrap ClassLoader")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JAVA_HOME/jre/lib")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("启动类加载器,无法直接访问,显示null")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Extension ClassLoader")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JAVA_HOME/jre/lib/ext")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("扩展类加载器,上级为Bootstrap")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Application ClassLoader")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("classpath")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("应用程序类加载器,上级Extension")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("自定义类加载")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("自定义")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("上级为Application")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-启动类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-启动类加载器"}},[t._v("#")]),t._v(" 1. 启动类加载器")]),t._v(" "),s("ol",[s("li",[t._v("启动类加载器使用C/C++语言实现,嵌套在JVM内部")]),t._v(" "),s("li",[t._v("Java的核心类库都是使用启动类加载器加载的,比如String")]),t._v(" "),s("li",[t._v("没有父加载器")]),t._v(" "),s("li",[t._v("是扩展类加载器和应用程序类加载器的父加载器")]),t._v(" "),s("li",[t._v("启动时打印null")])]),t._v(" "),s("h3",{attrs:{id:"_2-扩展类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-扩展类加载器"}},[t._v("#")]),t._v(" 2.扩展类加载器")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("java语言编写")])]),t._v(" "),s("li",[s("p",[t._v("派生于ClassLoader")])]),t._v(" "),s("li",[s("p",[t._v("父类加载器为"),s("strong",[t._v("启动类加载器")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-应用程序类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用程序类加载器"}},[t._v("#")]),t._v(" 3.应用程序类加载器")]),t._v(" "),s("ol",[s("li",[t._v("java语言编写")]),t._v(" "),s("li",[t._v("派生于ClassLoader类")]),t._v(" "),s("li",[t._v("父类加载器为"),s("strong",[t._v("扩展类加载器")])]),t._v(" "),s("li",[t._v("它负责加载环境变量classpath或系统属性java.class.path指定路径下的类库")]),t._v(" "),s("li",[t._v("该类加载器是程序中默认的类加载器，一般来说，Java应用的类都是由它来完成加载的")]),t._v(" "),s("li",[t._v("通过ClassLoader.getSystemClassLoader()方法可以获得该类加载器")])]),t._v(" "),s("h3",{attrs:{id:"_4-线程上下文类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程上下文类加载器"}},[t._v("#")]),t._v(" 4.线程上下文类加载器")]),t._v(" "),s("p",[t._v("是当前线程使用的类加载器,默认就是"),s("strong",[t._v("应用程序类加载器")])]),t._v(" "),s("p",[t._v("内部又是由Class.forName调用了线程上下文类加载器完成类加载")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取线程上下文类加载器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),t._v(" cl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"_5-自定义类加载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-自定义类加载器"}},[t._v("#")]),t._v(" 5.自定义类加载器")]),t._v(" "),s("p",[s("strong",[t._v("什么时候需要加载自定义类加载器?")])]),t._v(" "),s("ul",[s("li",[t._v("想加载"),s("strong",[t._v("非classpath任意路径")]),t._v("中的类文件")]),t._v(" "),s("li",[t._v("都是通过接口来使用实现,框架设计")]),t._v(" "),s("li",[t._v("这些类希望予以隔离,不同应用的同名类都可以加载")])]),t._v(" "),s("p",[s("strong",[t._v("如何自定义加载器?")])]),t._v(" "),s("ol",[s("li",[t._v("继承ClassLoader父类")]),t._v(" "),s("li",[t._v("要遵从双亲委派机制,重写"),s("strong",[t._v("findClass")]),t._v("方法,但不能重写"),s("strong",[t._v("loadClass")]),t._v("方法")]),t._v(" "),s("li",[t._v("读取类文件的字节码")]),t._v(" "),s("li",[t._v("读取父类的defineClass方法来加载类")]),t._v(" "),s("li",[t._v("使用者调用该类的loadClass方法")])]),t._v(" "),s("h2",{attrs:{id:"三-双亲委派"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-双亲委派"}},[t._v("#")]),t._v(" 三.双亲委派")]),t._v(" "),s("p",[t._v("所谓双亲委派,就是调用"),s("strong",[t._v("类加载器的loadClass()方法")]),t._v("时,查找类的规则")]),t._v(" "),s("p",[t._v("不考虑我们自定义类加载器,首先会在**AppClassLoader(应用程序加载器)**中检查是否加载过")]),t._v(" "),s("p",[t._v("如果有那就无需再加载.")]),t._v(" "),s("p",[t._v("如果没有,那么会拿到父加载器,然后调用"),s("strong",[t._v("父加载器(扩展类加载器)的loadClass()方法")]),t._v(".")]),t._v(" "),s("p",[t._v("父类也会查看自己是否加载过,如果没有则进入启动类加载器.")]),t._v(" "),s("p",[t._v("到了"),s("strong",[t._v("BootstrapClassLoader启动类记载器")]),t._v(",考虑总控是否能加载,如果不能加载就下沉到子加载器中")]),t._v(" "),s("p",[t._v("如果没有任何加载器能够加载,则抛出"),s("strong",[t._v("ClassNotFoundException异常")])]),t._v(" "),s("p",[s("strong",[s("u",[t._v("双亲委派机制保证Java程序的稳定运行,可以避免类的重复加载")])])]),t._v(" "),s("h3",{attrs:{id:"jdbc打破双亲委派机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc打破双亲委派机制"}},[t._v("#")]),t._v(" JDBC打破双亲委派机制")]),t._v(" "),s("p",[t._v("在JDBC 4.0之后，我们不再需要调用Class.forName()方法去加载驱动类。只需要将对应的驱动类jar包放到工程的class path下，驱动类会自动被加载。")]),t._v(" "),s("p",[t._v("这种自动加载的技术被称为"),s("strong",[t._v("SPI")]),t._v("（Service Privider Interface）[3]，SPI可以简单理解为：为了解耦，从配置里获取某个接口的具体实现类。")]),t._v(" "),s("p",[s("big",[s("strong",[t._v("为什么要打破?")])])],1),t._v(" "),s("ul",[s("li",[t._v("JDBC的driver接口定义在JDK中，但是它的实现类是放在classpath下的（比如MySQL）")]),t._v(" "),s("li",[t._v("boostrap classloader显然是无法加载到MySQL driver的（ClassNotFoundException）")]),t._v(" "),s("li",[t._v("因此只能在DriverManager里强行指定下层classloader来加载Driver实现类，而这就会打破双亲委派模型")])]),t._v(" "),s("p",[s("big",[s("strong",[t._v("如何打破?")])])],1),t._v(" "),s("p",[t._v("ServiceLoader.load方法会用context class loader来根据配置加载对应的类")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceLoader")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("S")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),t._v(" cl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"四-运行期优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-运行期优化"}},[t._v("#")]),t._v(" 四.运行期优化")]),t._v(" "),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("执行以上新建1000个对象")]),t._v(" "),s("p",[t._v("程序执行到后面,所用时间会越来越少")]),t._v(" "),s("p",[t._v("JVM将执行状态分成了5个层次")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("0层，解释执行（Interpreter)")])]),t._v(" "),s("li",[s("p",[t._v("1层，使用C1即时编译器编译执行（不带profiling)")])]),t._v(" "),s("li",[s("p",[t._v("2层，使用c1即时编译器编译执行（带基本的profiling)")])]),t._v(" "),s("li",[s("p",[t._v("3层，使用C1即时编译器编译执行（带完全的profiling)")])]),t._v(" "),s("li",[s("p",[t._v("4层，使用C2即时编译器编译执行")]),t._v(" "),s("blockquote",[s("p",[t._v("profiling是指在运行过程中收集一些程序执行状态的数据，例如【方法的调用次数】\n，【循环的回边次数】等")])])])]),t._v(" "),s("p",[t._v("即时编译器(JIT)与解释器的区别")]),t._v(" "),s("ul",[s("li",[t._v("解释器是将字节码解释为机器码，下次即使遇到相同的字节码，仍会执行重复的解释")]),t._v(" "),s("li",[t._v("JIT是将一些字节码编译为机器码，并存入Code Cache，下次遇到相同的代码，直接执行，无需再编译解释器是将字节码解释为针对所有平台都通用的机器码")]),t._v(" "),s("li",[t._v("JIT会根据平台类型，生成平台特定的机器码\n对于占据大部分的不常用的代码，我们无需耗费时间将其编译成机器码，而是采取"),s("strong",[t._v("解释执行")]),t._v("的方式运行;另一方面，"),s("strong",[t._v("对于仅占据小部分的热点代码，我们则可以将其编译成机器码，以达到理想的运行速度")]),t._v("。执行效率上简单比较一下Interpreter<Cl<C2，总的目标是发现热点代码("),s("strong",[t._v("hotspot")]),t._v("名称的由来)，优化之")])])])}),[],!1,null,null,null);s.default=e.exports}}]);